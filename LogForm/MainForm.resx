<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vrWDCEsDkeOu+N6AQE0WCXFTxpHQ/Oe94n2GYvoTu4om5K2g1OAmhaz278wfQAXDzk8QPe5suCJZ36O1
        JYgjZ0A6FCk+msPLrlXmNShlt1iYTc4CaHrBDsSD697R8sHMtUNUWzLNPQQgQjqJTbdkTuCjpaX7m+J+
        C2/vsRW15jdOKboWR3wf7Z//2gAMAwEAAgADAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABIBAABIABAAAAAAAAAAAAAAAAAAAAAABJBBIAIBABAAAAAAAAAA
        AAAAAAAAAAAAIIBABIJJBJIAAAAAAAAAAAAAAAAAAAABAAIJIJIJABIAAAAAAAAAAAAAAAAAAAAIIBBI
        IJJIAAAAAAAAAAAAAAAAAAAAAAABBIAIJBBBAAAAAAAAAAAAAAAAAAAAAABBJBAIJJIIAAAAAAAAAAAA
        AAAAAAAAAAAAAABAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJIAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        /FZACKeyfzZ//9k=
</value>
  </data>
</root>